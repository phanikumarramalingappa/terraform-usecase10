name: terraform-usecase-10

on:
  push:
    paths:
      - '**'
      - '.github/workflows/terraform-usecase-10.yaml'
    branches: [main]

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  terraform-usecase-10:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      - name: Extract action from commit message
        id: get_action
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$COMMIT_MSG" == *"terraform:apply"* ]]; then
            echo "action=apply" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MSG" == *"terraform:destroy"* ]]; then
            echo "action=destroy" >> $GITHUB_OUTPUT
          else
            echo "action=none" >> $GITHUB_OUTPUT

      - name: Debug Action Output
        run: echo "Action is ${{ steps.get_action.outputs.action }}"

      - name: Terraform Init, Format, Validate
        run: |
          terraform init
          terraform fmt -recursive
          terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file=terraform.tfvars -out=tfplan

      - name: Terraform Apply
        if: ${{ steps.get_action.outputs.action == 'apply' }}
        run: terraform apply -auto-approve tfplan

      - name: Login to Amazon ECR
        if: ${{ steps.get_action.outputs.action == 'apply' }}
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push appointment-service
        if: ${{ steps.get_action.outputs.action == 'apply' }}
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/node-appointment:latest ./microservices/appointment-service
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/node-appointment:latest

      - name: Build and Push patient-service
        if: ${{ steps.get_action.outputs.action == 'apply' }}
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/node-patient:latest ./microservices/patient-service
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/node-patient:latest

      - name: Terraform Destroy
        if: ${{ steps.get_action.outputs.action == 'destroy' }}
        run: terraform destroy -auto-approve
